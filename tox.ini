[tox]
envlist =
    py{37,38,39,310,311,py3}-{build,tests}
    pypypytest3
    readme
    safety
    secrets
    style
    docs-{dirhtml,doctest,linkcheck,spelling,style}
skipsdist = True

[testenv]
changedir = {envtmpdir}
passenv = CODECOV* CI
setenv =
    PYTHONWARNINGS=default

    coverage,codecov: MAYBE_COVERAGE = coverage run -m
    coverage,codecov: COVERAGE_RCFILE={toxinidir}/.coveragerc
    coverage,codecov: COVERAGE_DEBUG_FILE={envtmpdir}/coverage-debug
    coverage,codecov: COVERAGE_FILE={envtmpdir}/coverage-data
commands =
    {envpython} -m pip install --disable-pip-version-check {toxinidir}

    tests,coverage,codecov: {envpython} -m {env:MAYBE_COVERAGE:} virtue {posargs:regret}
    tests: {envpython} -m doctest {toxinidir}/README.rst

    coverage: {envpython} -m coverage report --show-missing
    coverage: {envpython} -m coverage html --directory={envtmpdir}/htmlcov
    codecov: {envpython} -m coverage xml -o {envtmpdir}/coverage.xml
    codecov: codecov --required --disable gcov --file {envtmpdir}/coverage.xml

    build: {envpython} -m build {toxinidir} --outdir {envtmpdir}/dist
deps =
    build: build

    tests,coverage,codecov: virtue
    tests,coverage,codecov,pypypytest3: -r{toxinidir}/test-requirements.txt
    coverage,codecov: coverage
    codecov: codecov

[testenv:bandit]
deps = bandit
commands = {envpython} -m bandit --recursive {toxinidir}/regret

[testenv:pypypytest3]
basepython = pypy3
setenv =
changedir = {envtmpdir}
commands =
    {envpython} -m pip install --disable-pip-version-check {toxinidir}
    {envbindir}/pytest {posargs:{toxinidir}}
deps =
    {[testenv]deps}
    pytest

[testenv:readme]
deps =
    build
    twine
commands =
    {envpython} -m build --outdir {envtmpdir}/dist {toxinidir}
    {envpython} -m twine check {envtmpdir}/dist/*

[testenv:safety]
deps = safety
commands =
    {envpython} -m pip install --disable-pip-version-check {toxinidir}
    {envpython} -m safety check

[testenv:secrets]
deps = detect-secrets
commands = {envbindir}/detect-secrets scan {toxinidir}

[testenv:style]
deps =
    flake8
    flake8-broken-line
    flake8-bugbear
    flake8-commas
    flake8-quotes
    flake8-tidy-imports
commands =
    {envpython} -m flake8 {posargs} --max-complexity 10 {toxinidir}/regret {toxinidir}/docs

[testenv:docs-dirhtml]
commands = {envpython} -m sphinx -b dirhtml {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = -r{toxinidir}/docs/requirements.txt

[testenv:docs-doctest]
commands = {envpython} -m sphinx -b doctest {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-linkcheck]
commands = {envpython} -m sphinx -b linkcheck {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-spelling]
commands = {envpython} -m sphinx -b spelling {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-style]
commands =
  doc8 --ignore-path {toxinidir}/docs/requirements.txt {posargs} {toxinidir}/docs
deps =
    doc8
    pygments
    pygments-github-lexers
