name: Packaging

on:
  push:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [pypy3, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install build
    - name: Create packages
      run: python -m build .
    - uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.python-version }}
        path: dist
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.python-version == 'pypy3' && runner.os == 'Linux'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
    - name: Create Release Notes
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.request(`POST /repos/${{ github.repository }}/releases`, {
            tag_name: "${{ github.ref }}",
            generate_release_notes: true
          });
